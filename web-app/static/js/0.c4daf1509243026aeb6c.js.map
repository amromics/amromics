{"version":3,"sources":["webpack:///./node_modules/datatables.net-buttons/js/dataTables.buttons.js"],"names":["__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","$","window","document","undefined","DataTable","fn","dataTable","_instCounter","_buttonCounter","_dtButtons","ext","buttons","_fadeIn","el","duration","animate","stop","fadeIn","css","call","_fadeOut","fadeOut","_infoTimer","Buttons","dt","config","this","settings","container","Array","isArray","c","extend","defaults","s","Api","listenKeys","namespace","dom","tag","addClass","className","_constructor","prototype","action","node","button","_nodeToButton","conf","active","flag","klass","jqNode","hasClass","toggleClass","add","idx","split","base","i","ien","length","_expandButton","_draw","disable","disabled","attr","destroy","off","slice","remove","buttonInsts","inst","splice","enable","removeClass","removeAttr","name","processing","table","triggerHandler","host","_nodeToHost","_removeKey","inArray","text","label","buttonLiner","collection","linerTag","inCollection","opt","children","html","that","dtSettings","_buttons","push","on","e","activeElement","body","character","String","fromCharCode","keyCode","toLowerCase","indexOf","_keypress","_addKey","key","isPlainObject","detach","append","inserter","attachTo","attachPoint","_resolveExtends","built","_buildButton","_collection","init","buttonCounter","buttonDom","linerDom","collectionDom","available","clickBlurs","iTabIndex","id","preventDefault","trigger","liner","enabled","titleAttr","buttonContainer","buttonCreated","get","ret","_buttonsHandled","run","click","shiftKey","altKey","ctrlKey","metaKey","recurse","a","join","toConfObject","loop","objArray","originalClassName","postfixButtons","prefixButtons","_popover","content","hostButton","inOpts","buttonsSettings","options","align","autoClose","background","backgroundClassName","contentClassName","collectionLayout","collectionTitle","dropup","fade","rightAlignClassName","hostNode","close","nodes","existingExpanded","eq","display","appendTo","parents","lastChild","prepend","insertAfter","tableContainer","position","parent","width","leftAlignClassName","hostPosition","top","outerHeight","left","collectionHeight","tableBottom","offset","height","bottomOverflow","listTop","topOverflow","tableTop","moveTop","leftGap","rightGap","tableLeft","tableRight","popoverRight","popoverLeft","buttonsRight","buttonsLeft","outerWidth","popoverShuffle","back","addBack","target","filter","setTimeout","btn","show","insertPoint","instanceSelector","group","map","v","names","process","input","trim","buttonSelector","insts","selector","nodeBuilder","baseIdx","match","indexes","replace","each","nodeName","tabIndex","version","i18n","stopPropagation","popover","aria-haspopup","copy","copyHtml5","copyFlash","csv","csvHtml5","csvFlash","excel","excelHtml5","excelFlash","pdf","pdfHtml5","pdfFlash","pageLength","lengthMenu","aLengthMenu","vals","lang","-1","_","page","len","val","draw","register","buttonGroup","res","iterator","ctx","_groupSelector","registerPlural","set","jq","groupSelector","containers","context","pluck","unique","title","message","time","clearTimeout","info","_exportData","filename","_filename","_title","messageTop","_message","messageBottom","extension","_stringOrFunction","option","caption","_exportTextarea","rows","columns","modifier","search","order","orthogonal","stripHtml","stripNewlines","decodeEntities","format","header","d","strip","footer","customizeData","str","innerHTML","value","column","toArray","select","selected","any","rowIndexes","selectedCells","cells","render","cellNodes","cellCounter","row","j","data","_init","api","opts","oInit","feature","fnInit","cFeature","features","__webpack_require__","apply","exports","module"],"mappings":"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","file":"static/js/0.c4daf1509243026aeb6c.js","sourcesContent":["/*! Buttons for DataTables 1.6.5\n * ©2016-2020 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeIn( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeOut( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\t\t\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif ( !(this instanceof Buttons) ) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons( settings, dt ).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif ( typeof( config ) === 'undefined' ) {\n\t\tconfig = {};\t\n\t}\n\t\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( Array.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( node, action )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function ( node, flag ) {\n\t\tvar button = this._nodeToButton( node );\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn jqNode.hasClass( klass );\n\t\t}\n\n\t\tjqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( config, idx )\n\t{\n\t\tvar buttons = this.s.buttons;\n\n\t\tif ( typeof idx === 'string' ) {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n\t\t\t\tbase = base.buttons[ split[i]*1 ];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[ split.length-1 ]*1;\n\t\t}\n\n\t\tthis._expandButton( buttons, config, base !== undefined, idx );\n\t\tthis._draw();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( node ) {\n\t\tvar button = this._nodeToButton( node );\n\n\t\t$(button.node)\n\t\t\t.addClass( this.c.dom.button.disabled )\n\t\t\t.attr('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.remove( buttons[i].node );\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( node, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( node );\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\t$(button.node)\n\t\t\t.removeClass( this.c.dom.button.disabled )\n\t\t\t.removeAttr('disabled');\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function ( node )\n\t{\n\t\tif ( ! node ) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function ( node, flag )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn $(button.node).hasClass( 'processing' );\n\t\t}\n\n\t\t$(button.node).toggleClass( 'processing', flag );\n\n\t\t$(dt.table().node()).triggerHandler( 'buttons-processing.dt', [\n\t\t\tflag, dt.button( node ), dt, $(node), button.conf\n\t\t] );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar host = this._nodeToHost( node );\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif ( button.buttons.length ) {\n\t\t\tfor ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tthis.remove( button.buttons[i].node );\n\t\t\t}\n\t\t}\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif ( button.conf.destroy ) {\n\t\t\tbutton.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n\t\t}\n\n\t\tthis._removeKey( button.conf );\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray( button, host );\n\t\thost.splice( idx, 1 );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( node, label )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, jqNode, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tjqNode.children( linerTag ).html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tjqNode.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons =  this.c.buttons;\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.add( buttons[i] );\n\t\t}\n\n\t\tdt.on( 'destroy', function ( e, settings ) {\n\t\t\tif ( settings === dtSettings ) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function ( container, buttons )\n\t{\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tcontainer.append( buttons[i].inserter );\n\t\t\tcontainer.append( ' ' );\n\n\t\t\tif ( buttons[i].buttons && buttons[i].buttons.length ) {\n\t\t\t\tthis._draw( buttons[i].collection, buttons[i].buttons );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function ( attachTo, button, inCollection, attachPoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar buttonCounter = 0;\n\t\tvar buttons = ! Array.isArray( button ) ?\n\t\t\t[ button ] :\n\t\t\tbutton;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( Array.isArray( conf ) ) {\n\t\t\t\tthis._expandButton( attachTo, conf, inCollection, attachPoint );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton( conf, inCollection );\n\t\t\tif ( ! built ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( attachPoint !== undefined && attachPoint !== null ) {\n\t\t\t\tattachTo.splice( attachPoint, 0, built );\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push( built );\n\t\t\t}\n\n\t\t\tif ( built.conf.buttons ) {\n\t\t\t\tbuilt.collection = $('<'+this.c.dom.collection.tag+'/>');\n\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tthis._expandButton( built.buttons, built.conf.buttons, true, attachPoint );\n\t\t\t}\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n\t\t\t}\n\n\t\t\tbuttonCounter++;\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, inCollection )\n\t{\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( inCollection && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t}\n\n\t\tif ( inCollection && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, Flash buttons require Flash\n\t\tif ( config.available && ! config.available( dt, config ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar action = function ( e, dt, button, config ) {\n\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\n\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t] );\n\t\t};\n\n\t\tvar tag = config.tag || buttonDom.tag;\n\t\tvar clickBlurs = config.clickBlurs === undefined ? true : config.clickBlurs\n\t\tvar button = $('<'+tag+'/>')\n\t\t\t.addClass( buttonDom.className )\n\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t}\n\t\t\t\tif( clickBlurs ) {\n\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Make `a` tags act like a link\n\t\tif ( tag.toLowerCase() === 'a' ) {\n\t\t\tbutton.attr( 'href', '#' );\n\t\t}\n\n\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\tif ( tag.toLowerCase() === 'button' ) {\n\t\t\tbutton.attr( 'type', 'button' );\n\t\t}\n\n\t\tif ( linerDom.tag ) {\n\t\t\tvar liner = $('<'+linerDom.tag+'/>')\n\t\t\t\t.html( text( config.text ) )\n\t\t\t\t.addClass( linerDom.className );\n\n\t\t\tif ( linerDom.tag.toLowerCase() === 'a' ) {\n\t\t\t\tliner.attr( 'href', '#' );\n\t\t\t}\n\n\t\t\tbutton.append( liner );\n\t\t}\n\t\telse {\n\t\t\tbutton.html( text( config.text ) );\n\t\t}\n\n\t\tif ( config.enabled === false ) {\n\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t}\n\n\t\tif ( config.className ) {\n\t\t\tbutton.addClass( config.className );\n\t\t}\n\n\t\tif ( config.titleAttr ) {\n\t\t\tbutton.attr( 'title', text( config.titleAttr ) );\n\t\t}\n\n\t\tif ( config.attr ) {\n\t\t\tbutton.attr( config.attr );\n\t\t}\n\n\t\tif ( ! config.namespace ) {\n\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer && buttonContainer.tag ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif( this.c.buttonCreated ) {\n\t\t\tinserter = this.c.buttonCreated( config, inserter );\n\t\t}\n\n\t\treturn {\n\t\t\tconf:         config,\n\t\t\tnode:         button.get(0),\n\t\t\tinserter:     inserter,\n\t\t\tbuttons:      [],\n\t\t\tinCollection: inCollection,\n\t\t\tcollection:   null\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToButton( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToHost( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif ( e._buttonsHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function ( a ) {\n\t\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\trun( a[i].conf, a[i].node );\n\n\t\t\t\tif ( a[i].buttons.length ) {\n\t\t\t\t\trecurse( a[i].buttons );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse( this.s.buttons );\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! Array.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base( dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\tthrow 'Unknown button type: '+base;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( Array.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t\t// if buttons should be added to the start or end of a collection\n\t\t\tvar postfixButtons = conf.postfixButtons;\n\t\t\tif ( postfixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.postfixButtons = null;\n\t\t\t}\n\n\t\t\tvar prefixButtons = conf.prefixButtons;\n\t\t\tif ( prefixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.prefixButtons = null;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function ( content, hostButton, inOpts ) {\n\t\tvar dt = hostButton;\n\t\tvar buttonsSettings = this.c;\n\t\tvar options = $.extend( {\n\t\t\talign: 'button-left', // button-right, dt-container\n\t\t\tautoClose: false,\n\t\t\tbackground: true,\n\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\tcontentClassName: buttonsSettings.dom.collection.className,\n\t\t\tcollectionLayout: '',\n\t\t\tcollectionTitle: '',\n\t\t\tdropup: false,\n\t\t\tfade: 400,\n\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\ttag: buttonsSettings.dom.collection.tag\n\t\t}, inOpts );\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\t_fadeOut(\n\t\t\t\t$('.dt-button-collection'),\n\t\t\t\toptions.fade,\n\t\t\t\tfunction () {\n\t\t\t\t\t$(this).detach();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t$(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes())\n\t\t\t\t.attr('aria-expanded', 'false');\n\n\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\tButtons.background( false, options.backgroundClassName, options.fade, hostNode );\n\n\t\t\t$('body').off( '.dtb-collection' );\n\t\t\tdt.off( 'buttons-action.b-internal' );\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t}\n\n\t\tvar existingExpanded = $(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes());\n\t\tif ( existingExpanded.length ) {\n\t\t\thostNode = existingExpanded.eq(0);\n\n\t\t\tclose();\n\t\t}\n\n\t\tvar display = $('<div/>')\n\t\t\t.addClass('dt-button-collection')\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.css('display', 'none');\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr( 'aria-expanded', 'true' );\n\n\t\tif ( hostNode.parents('body')[0] !== document.body ) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif ( options.collectionTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.collectionTitle+'</div>');\n\t\t}\n\n\t\t_fadeIn( display.insertAfter( hostNode ), options.fade );\n\n\t\tvar tableContainer = $( hostButton.table().container() );\n\t\tvar position = display.css( 'position' );\n\n\t\tif ( options.align === 'dt-container' ) {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (\n\t\t\tposition === 'absolute' &&\n\t\t\t(\n\t\t\t\tdisplay.hasClass( options.rightAlignClassName ) ||\n\t\t\t\tdisplay.hasClass( options.leftAlignClassName ) ||\n\t\t\t\toptions.align === 'dt-container'\n\t\t\t)\n\t\t) {\n\n\t\t\tvar hostPosition = hostNode.position();\n\n\t\t\tdisplay.css( {\n\t\t\t\ttop: hostPosition.top + hostNode.outerHeight(),\n\t\t\t\tleft: hostPosition.left\n\t\t\t} );\n\n\t\t\t// calculate overflow when positioned beneath\n\t\t\tvar collectionHeight = display.outerHeight();\n\t\t\tvar tableBottom = tableContainer.offset().top + tableContainer.height();\n\t\t\tvar listBottom = hostPosition.top + hostNode.outerHeight() + collectionHeight;\n\t\t\tvar bottomOverflow = listBottom - tableBottom;\n\n\t\t\t// calculate overflow when positioned above\n\t\t\tvar listTop = hostPosition.top - collectionHeight;\n\t\t\tvar tableTop = tableContainer.offset().top;\n\t\t\tvar topOverflow = tableTop - listTop;\n\n\t\t\t// if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n\t\t\tvar moveTop = hostPosition.top - collectionHeight - 5;\n\t\t\tif ( (bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop ) {\n\t\t\t\tdisplay.css( 'top', moveTop);\n\t\t\t}\n\n\t\t\t// Get the size of the container (left and width - and thus also right)\n\t\t\tvar tableLeft = tableContainer.offset().left;\n\t\t\tvar tableWidth = tableContainer.width();\n\t\t\tvar tableRight = tableLeft + tableWidth;\n\n\t\t\t// Get the size of the popover (left and width - and ...)\n\t\t\tvar popoverLeft = display.offset().left;\n\t\t\tvar popoverWidth = display.width();\n\t\t\tvar popoverRight = popoverLeft + popoverWidth;\n\n\t\t\t// Get the size of the host buttons (left and width - and ...)\n\t\t\tvar buttonsLeft = hostNode.offset().left;\n\t\t\tvar buttonsWidth = hostNode.outerWidth()\n\t\t\tvar buttonsRight = buttonsLeft + buttonsWidth;\n\t\t\t\n\t\t\t// You've then got all the numbers you need to do some calculations and if statements,\n\t\t\t//  so we can do some quick JS maths and apply it only once\n\t\t\t// If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n\t\t\t//  then calculate left position for the popover to align the popover to the right hand\n\t\t\t//  side of the button - check to see if the left of the popover is inside the table container.\n\t\t\t// If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n\t\t\tvar popoverShuffle = 0;\n\t\t\tif ( display.hasClass( options.rightAlignClassName )) {\n\t\t\t\tpopoverShuffle = buttonsRight - popoverRight;\n\t\t\t\tif(tableLeft > (popoverLeft + popoverShuffle)){\n\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\n\t\t\t\t\tif(leftGap > rightGap){\n\t\t\t\t\t\tpopoverShuffle += rightGap; \n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n\t\t\t//  then move it back, but not so much that it goes past the left of the table container\n\t\t\telse {\n\t\t\t\tpopoverShuffle = tableLeft - popoverLeft;\n\n\t\t\t\tif(tableRight < (popoverRight + popoverShuffle)){\n\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\n\t\t\t\t\tif(leftGap > rightGap ){\n\t\t\t\t\t\tpopoverShuffle += rightGap;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t\n\t\t}\n\t\telse if (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar hostPosition = hostNode.position();\n\n\t\t\tdisplay.css( {\n\t\t\t\ttop: hostPosition.top + hostNode.outerHeight(),\n\t\t\t\tleft: hostPosition.left\n\t\t\t} );\n\n\t\t\t// calculate overflow when positioned beneath\n\t\t\tvar collectionHeight = display.outerHeight();\n\t\t\tvar top = hostNode.offset().top\n\t\t\tvar popoverShuffle = 0;\n\n\t\t\t// Get the size of the host buttons (left and width - and ...)\n\t\t\tvar buttonsLeft = hostNode.offset().left;\n\t\t\tvar buttonsWidth = hostNode.outerWidth()\n\t\t\tvar buttonsRight = buttonsLeft + buttonsWidth;\n\n\t\t\t// Get the size of the popover (left and width - and ...)\n\t\t\tvar popoverLeft = display.offset().left;\n\t\t\tvar popoverWidth = content.width();\n\t\t\tvar popoverRight = popoverLeft + popoverWidth;\n\n\t\t\tvar moveTop = hostPosition.top - collectionHeight - 5;\n\t\t\tvar tableBottom = tableContainer.offset().top + tableContainer.height();\n\t\t\tvar listBottom = hostPosition.top + hostNode.outerHeight() + collectionHeight;\n\t\t\tvar bottomOverflow = listBottom - tableBottom;\n\n\t\t\t// calculate overflow when positioned above\n\t\t\tvar listTop = hostPosition.top - collectionHeight;\n\t\t\tvar tableTop = tableContainer.offset().top;\n\t\t\tvar topOverflow = tableTop - listTop;\n\n\t\t\tif ( (bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop ) {\n\t\t\t\tdisplay.css( 'top', moveTop);\n\t\t\t}\n\n\t\t\tpopoverShuffle = options.align === 'button-right'\n\t\t\t\t? buttonsRight - popoverRight\n\t\t\t\t: buttonsLeft - popoverLeft;\n\n\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar top = display.height() / 2;\n\t\t\tif ( top > $(window).height() / 2 ) {\n\t\t\t\ttop = $(window).height() / 2;\n\t\t\t}\n\n\t\t\tdisplay.css( 'marginTop', top*-1 );\n\t\t}\n\n\t\tif ( options.background ) {\n\t\t\tButtons.background( true, options.backgroundClassName, options.fade, hostNode );\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\t$('body')\n\t\t\t.on( 'click.dtb-collection', function (e) {\n\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\tvar parent = $(e.target).parent()[0];\n\n\t\t\t\tif (( ! $(e.target).parents()[back]().filter( content ).length  && !$(parent).hasClass('dt-buttons')) || $(e.target).hasClass('dt-button-background')) {\n\t\t\t\t\tclose();\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb-collection', function (e) {\n\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\tclose();\n\t\t\t\t}\n\t\t\t} );\n\n\t\tif ( options.autoClose ) {\n\t\t\tsetTimeout( function () {\n\t\t\t\tdt.on( 'buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif ( node[0] === hostNode[0] ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t} );\n\t\t\t}, 0);\n\t\t}\n\n\t\t$(display).trigger('buttons-popover.dt');\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade, insertPoint ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\tif ( ! insertPoint ) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif ( show ) {\n\t\t_fadeIn(\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( className )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.insertAfter( insertPoint ),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut(\n\t\t\t$('div.'+className),\n\t\t\tfade,\n\t\t\tfunction () {\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass( className )\n\t\t\t\t\t.remove();\n\t\t\t}\n\t\t);\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( group === undefined || group === null ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( Array.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( input.trim(), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar nodeBuilder = function ( a, buttons, baseIdx ) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( button ) {\n\t\t\t\tidx = baseIdx !== undefined ?\n\t\t\t\t\tbaseIdx+i :\n\t\t\t\t\ti+'';\n\n\t\t\t\ta.push( {\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx:  idx\n\t\t\t\t} );\n\n\t\t\t\tif ( button.buttons ) {\n\t\t\t\t\tnodeBuilder( a, button.buttons, idx+'-' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder( buttons, inst.s.buttons );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( Array.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tret.push( {\n\t\t\t\tinst: inst,\n\t\t\t\tnode: inst.s.buttons[ selector ].node\n\t\t\t} );\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( a[i].trim(), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map( buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t} );\n\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[ $.inArray( selector, indexes ) ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tnode: this\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[ idx ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: ''\n\t\t},\n\t\tbutton: {\n\t\t\t// Flash buttons will not work with `<button>` in IE - it has to be `<a>`\n\t\t\ttag: 'ActiveXObject' in window ?\n\t\t\t\t'a' :\n\t\t\t\t'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled'\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '1.6.5';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tinit: function ( dt, button, config ) {\n\t\t\tbutton.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\te.stopPropagation();\n\n\t\t\tif ( config._collection.parents('body').length ) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': true\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t\tif ( _dtButtons.copyFlash && _dtButtons.copyFlash.available( dt, conf ) ) {\n\t\t\treturn 'copyFlash';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t\tif ( _dtButtons.csvFlash && _dtButtons.csvFlash.available( dt, conf ) ) {\n\t\t\treturn 'csvFlash';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t\tif ( _dtButtons.excelFlash && _dtButtons.excelFlash.available( dt, conf ) ) {\n\t\t\treturn 'excelFlash';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t\tif ( _dtButtons.pdfFlash && _dtButtons.pdfFlash.available( dt, conf ) ) {\n\t\t\treturn 'pdfFlash';\n\t\t}\n\t},\n\tpageLength: function ( dt ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = Array.isArray( lengthMenu[0] ) ? lengthMenu[0] : lengthMenu;\n\t\tvar lang = Array.isArray( lengthMenu[0] ) ? lengthMenu[1] : lengthMenu;\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function ( e, dt ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( conf.text );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n\n\tres._groupSelector = group;\n\treturn res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.active( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.node, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.action( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.node, action );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.node, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.node );\n\t} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.node ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button processing state\nDataTable.Api.registerPlural( 'buttons().processing()', 'button().processing()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.processing( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.processing( set.node, flag );\n\t} );\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.text( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.node, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.node ).trigger( 'click' );\n\t} );\n} );\n\n// Button resolver to the popover\nDataTable.Api.register( 'button().popover()', function (content, options) {\n\treturn this.map( function ( set ) {\n\t\treturn set.inst._popover( content, this.button(this[0].node), options );\n\t} );\n} );\n\n// Get the container elements\nDataTable.Api.register( 'buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\tvar insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n\t\t\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\t\t\tjq = jq.add( insts[i].container() );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn jq;\n} );\n\nDataTable.Api.register( 'buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif ( ctx.length ) {\n\t\tvar inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n\t\tif ( inst.length ) {\n\t\t\tinst[0].add( conf, idx );\n\t\t}\n\t}\n\n\treturn this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\tthis.each( function ( set ) {\n\t\tset.inst.remove( set.node );\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut(\n\t\t\t$('#datatables_buttons_info'),\n\t\t\t400,\n\t\t\tfunction () {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t);\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html( title )\n\t\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t);\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register( 'buttons.exportInfo()', function ( conf ) {\n\tif ( ! conf ) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename( conf ),\n\t\ttitle: _title( conf ),\n\t\tmessageTop: _message(this, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf.messageBottom, 'bottom')\n\t};\n} );\n\n\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}\tconfig Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function ( config )\n{\n\t// Backwards compatibility\n\tvar filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ?\n\t\tconfig.title :\n\t\tconfig.filename;\n\n\tif ( typeof filename === 'function' ) {\n\t\tfilename = filename();\n\t}\n\n\tif ( filename === undefined || filename === null ) {\n\t\treturn null;\n\t}\n\n\tif ( filename.indexOf( '*' ) !== -1 ) {\n\t\tfilename = filename.replace( '*', $('head > title').text() ).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n\tvar extension = _stringOrFunction( config.extension );\n\tif ( ! extension ) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function ( option )\n{\n\tif ( option === null || option === undefined ) {\n\t\treturn null;\n\t}\n\telse if ( typeof option === 'function' ) {\n\t\treturn option();\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function ( config )\n{\n\tvar title = _stringOrFunction( config.title );\n\n\treturn title === null ?\n\t\tnull : title.indexOf( '*' ) !== -1 ?\n\t\t\ttitle.replace( '*', $('head > title').text() || 'Exported data' ) :\n\t\t\ttitle;\n};\n\nvar _message = function ( dt, option, position )\n{\n\tvar message = _stringOrFunction( option );\n\tif ( message === null ) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif ( message === '*' ) {\n\t\tvar side = caption.css( 'caption-side' );\n\t\tif ( side !== position ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ?\n\t\t\tcaption.text() :\n\t\t\t'';\n\t}\n\n\treturn message;\n};\n\n\n\n\n\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t}\n\t\t},\n\t\tcustomizeData: null\n\t}, inOpts );\n\n\tvar strip = function ( str ) {\n\t\tif ( typeof str !== 'string' ) {\n\t\t\treturn str;\n\t\t}\n\n\t\t// Always remove script tags\n\t\tstr = str.replace( /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '' );\n\n\t\t// Always remove comments\n\t\tstr = str.replace( /<!\\-\\-.*?\\-\\->/g, '' );\n\n\t\tif ( config.stripHtml ) {\n\t\t\tstr = str.replace( /<([^>'\"]*('[^']*'|\"[^\"]*\")?)*>/g, '' );\n\t\t}\n\n\t\tif ( config.trim ) {\n\t\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t\t}\n\n\t\tif ( config.stripNewlines ) {\n\t\t\tstr = str.replace( /\\n/g, ' ' );\n\t\t}\n\n\t\tif ( config.decodeEntities ) {\n\t\t\t_exportTextarea.innerHTML = str;\n\t\t\tstr = _exportTextarea.value;\n\t\t}\n\n\t\treturn str;\n\t};\n\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx) {\n\t\tvar el = dt.column( idx ).header();\n\t\treturn config.format.header( el.innerHTML, idx, el );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx, el );\n\t\t} ).toArray() :\n\t\tnull;\n\t\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend( {}, config.modifier );\n\tif ( dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined ) {\n\t\tif ( dt.rows( config.rows, $.extend( { selected: true }, modifier ) ).any() ) {\n\t\t\t$.extend( modifier, { selected: true } )\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows( config.rows, modifier ).indexes().toArray();\n\tvar selectedCells = dt.cells( rowIndexes, config.columns );\n\tvar cells = selectedCells\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar cellNodes = selectedCells\n\t\t.nodes()\n\t\t.toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = [ columns ];\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n\n\tif ( config.customizeData ) {\n\t\tconfig.customizeData( data );\n\t}\n\n\treturn data;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\nfunction _init ( settings, options ) {\n\tvar api = new DataTable.Api( settings );\n\tvar opts = options\n\t\t? options\n\t\t: api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons( api, opts ).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: _init,\n\tcFeature: \"B\"\n} );\n\n// DataTables 2 layout feature\nif ( DataTable.ext.features ) {\n\tDataTable.ext.features.register( 'buttons', _init );\n}\n\n\nreturn Buttons;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/datatables.net-buttons/js/dataTables.buttons.js\n// module id = 122j\n// module chunks = 0"],"sourceRoot":""}