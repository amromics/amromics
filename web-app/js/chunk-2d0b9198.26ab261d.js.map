{"version":3,"sources":["webpack:///./node_modules/datatables.net-buttons/js/buttons.colVis.js"],"names":["factory","$","window","document","undefined","DataTable","fn","dataTable","extend","ext","buttons","colvis","dt","conf","text","i18n","className","columns","columnText","columnsToggle","indexes","map","idx","toArray","columnToggle","columnsVisibility","visibility","columnVisibility","button","_columnText","action","e","col","curr","visible","length","init","that","this","attr","on","namespace","settings","bDestroying","nTable","active","column","details","count","destroy","off","index","title","aoColumns","sTitle","header","innerHTML","replace","colvisRestore","_visOriginal","every","i","colReorder","transpose","colvisGroup","show","hide","adjust","Buttons"],"mappings":"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","file":"js/chunk-2d0b9198.26ab261d.js","sourcesContent":["/*!\n * Column visibility buttons for Buttons and DataTables.\n * 2016 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\tif ( ! $.fn.dataTable.Buttons ) {\n\t\t\t\trequire('datatables.net-buttons')(root, $);\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n$.extend( DataTable.ext.buttons, {\n\t// A collection of column visibility buttons\n\tcolvis: function ( dt, conf ) {\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: function ( dt ) {\n\t\t\t\treturn dt.i18n( 'buttons.colvis', 'Column visibility' );\n\t\t\t},\n\t\t\tclassName: 'buttons-colvis',\n\t\t\tbuttons: [ {\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t} ]\n\t\t};\n\t},\n\n\t// Selected columns with individual buttons - toggle column visibility\n\tcolumnsToggle: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnToggle',\n\t\t\t\tcolumns: idx,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to toggle column visibility\n\tcolumnToggle: function ( dt, conf ) {\n\t\treturn {\n\t\t\textend: 'columnVisibility',\n\t\t\tcolumns: conf.columns,\n\t\t\tcolumnText: conf.columnText\n\t\t};\n\t},\n\n\t// Selected columns with individual buttons - set column visibility\n\tcolumnsVisibility: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnVisibility',\n\t\t\t\tcolumns: idx,\n\t\t\t\tvisibility: conf.visibility,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to set column visibility\n\tcolumnVisibility: {\n\t\tcolumns: undefined, // column selector\n\t\ttext: function ( dt, button, conf ) {\n\t\t\treturn conf._columnText( dt, conf );\n\t\t},\n\t\tclassName: 'buttons-columnVisibility',\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tvar col = dt.columns( conf.columns );\n\t\t\tvar curr = col.visible();\n\n\t\t\tcol.visible( conf.visibility !== undefined ?\n\t\t\t\tconf.visibility :\n\t\t\t\t! (curr.length ? curr[0] : false )\n\t\t\t);\n\t\t},\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tvar that = this;\n\t\t\tbutton.attr( 'data-cv-idx', conf.columns );\n\n\t\t\tdt\n\t\t\t\t.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {\n\t\t\t\t\tif ( ! settings.bDestroying && settings.nTable == dt.settings()[0].nTable ) {\n\t\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t\t\tif ( dt.columns( conf.columns ).count() !== 1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// This button controls the same column index but the text for the column has\n\t\t\t\t\t// changed\n\t\t\t\t\tthat.text( conf._columnText( dt, conf ) );\n\n\t\t\t\t\t// Since its a different column, we need to check its visibility\n\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t} );\n\n\t\t\tthis.active( dt.column( conf.columns ).visible() );\n\t\t},\n\t\tdestroy: function ( dt, button, conf ) {\n\t\t\tdt\n\t\t\t\t.off( 'column-visibility.dt'+conf.namespace )\n\t\t\t\t.off( 'column-reorder.dt'+conf.namespace );\n\t\t},\n\n\t\t_columnText: function ( dt, conf ) {\n\t\t\t// Use DataTables' internal data structure until this is presented\n\t\t\t// is a public API. The other option is to use\n\t\t\t// `$( column(col).node() ).text()` but the node might not have been\n\t\t\t// populated when Buttons is constructed.\n\t\t\tvar idx = dt.column( conf.columns ).index();\n\t\t\tvar title = dt.settings()[0].aoColumns[ idx ].sTitle;\n\n\t\t\tif (! title) {\n\t\t\t\ttitle = dt.column(idx).header().innerHTML;\n\t\t\t}\n\n\t\t\ttitle = title\n\t\t\t\t.replace(/\\n/g,\" \")        // remove new lines\n\t\t\t\t.replace(/<br\\s*\\/?>/gi, \" \")  // replace line breaks with spaces\n\t\t\t\t.replace(/<select(.*?)<\\/select>/g, \"\") // remove select tags, including options text\n\t\t\t\t.replace(/<!\\-\\-.*?\\-\\->/g, \"\") // strip HTML comments\n\t\t\t\t.replace(/<.*?>/g, \"\")   // strip HTML\n\t\t\t\t.replace(/^\\s+|\\s+$/g,\"\"); // trim\n\n\t\t\treturn conf.columnText ?\n\t\t\t\tconf.columnText( dt, idx, title ) :\n\t\t\t\ttitle;\n\t\t}\n\t},\n\n\n\tcolvisRestore: {\n\t\tclassName: 'buttons-colvisRestore',\n\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );\n\t\t},\n\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tconf._visOriginal = dt.columns().indexes().map( function ( idx ) {\n\t\t\t\treturn dt.column( idx ).visible();\n\t\t\t} ).toArray();\n\t\t},\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns().every( function ( i ) {\n\t\t\t\t// Take into account that ColReorder might have disrupted our\n\t\t\t\t// indexes\n\t\t\t\tvar idx = dt.colReorder && dt.colReorder.transpose ?\n\t\t\t\t\tdt.colReorder.transpose( i, 'toOriginal' ) :\n\t\t\t\t\ti;\n\n\t\t\t\tthis.visible( conf._visOriginal[ idx ] );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\tcolvisGroup: {\n\t\tclassName: 'buttons-colvisGroup',\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns( conf.show ).visible( true, false );\n\t\t\tdt.columns( conf.hide ).visible( false, false );\n\n\t\t\tdt.columns.adjust();\n\t\t},\n\n\t\tshow: [],\n\n\t\thide: []\n\t}\n} );\n\n\nreturn DataTable.Buttons;\n}));\n"],"sourceRoot":""}