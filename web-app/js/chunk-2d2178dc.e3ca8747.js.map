{"version":3,"sources":["webpack:///./node_modules/datatables-buttons/js/dataTables.buttons.js"],"names":["factory","$","window","document","undefined","_infoTimer","DataTable","fn","dataTable","_instCounter","_buttonCounter","_dtButtons","ext","buttons","Buttons","dt","config","isArray","this","c","extend","defaults","s","Api","subButtons","listenKeys","namespace","dom","container","tag","addClass","className","_constructor","prototype","action","idx","button","_indexToButton","conf","active","flag","node","toggleClass","add","indexOf","idxs","split","splice","empty","_buildButtons","disable","disabled","destroy","off","i","ien","j","jen","length","removePrep","removeCommit","remove","buttonInsts","settings","inst","enable","removeClass","name","call","_removeKey","text","label","buttonLiner","collection","linerTag","opt","children","html","toIndex","that","dtSettings","_buttons","push","on","e","activeElement","body","character","String","fromCharCode","keyCode","toLowerCase","_keypress","_addKey","key","isPlainObject","collectionCounter","_resolveExtends","_buildButton","buttonNode","append","inserter","collectionDom","_collection","init","collectionButton","buttonDom","linerDom","available","attr","iTabIndex","table","id","preventDefault","hasClass","blur","enabled","titleAttr","buttonContainer","run","click","shiftKey","altKey","ctrlKey","metaKey","a","inArray","join","toConfObject","base","loop","objArray","originalClassName","postfixButtons","prefixButtons","background","show","fade","css","appendTo","fadeIn","fadeOut","instanceSelector","group","map","v","ret","names","process","input","trim","buttonSelector","insts","selector","each","w","nodes","match","replace","filter","nodeName","tabIndex","version","i18n","host","hostOffset","offset","tableContainer","multiLevel","trigger","collectionLayout","position","top","left","outerHeight","listRight","outerWidth","tableRight","width","height","backgroundClassName","setTimeout","target","parents","andSelf","detach","copy","copyHtml5","copyFlash","csv","csvHtml5","csvFlash","excel","excelHtml5","excelFlash","pdf","pdfHtml5","pdfFlash","pageLength","lengthMenu","aLengthMenu","vals","lang","_","page","len","val","draw","register","iterator","ctx","set","registerPlural","jq","pluck","unique","title","message","time","clearTimeout","info","options","context","_exportData","_exportTextarea","inOpts","rows","columns","modifier","search","order","orthogonal","stripHtml","stripNewlines","decodeEntities","format","header","d","strip","footer","str","innerHTML","value","indexes","column","toArray","el","rowIndexes","cells","render","Array","cellCounter","row","json","opts","oInit","feature","fnInit","api","cFeature"],"mappings":"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","file":"js/chunk-2d2178dc.e3ca8747.js","sourcesContent":["/*! Buttons for DataTables 1.1.1-dev\n * ©2015 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( $.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tsubButtons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {int|string} Button index\n\t * @param  {function} Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( idx, action )\n\t{\n\t\tvar button = this._indexToButton( idx ).conf;\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.action;\n\t\t}\n\n\t\tbutton.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active\n\t * @param  {int|string} Button index\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tactive: function ( idx, flag ) {\n\t\tvar button = this._indexToButton( idx );\n\t\tbutton.node.toggleClass(\n\t\t\tthis.c.dom.button.active,\n\t\t\tflag === undefined ? true : flag\n\t\t);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {int|string} Button index for where to insert the button\n\t * @param {object} Button configuration object, base string name or function\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( idx, config )\n\t{\n\t\tif ( typeof idx === 'string' && idx.indexOf('-') !== -1 ) {\n\t\t\tvar idxs = idx.split('-');\n\t\t\tthis.c.buttons[idxs[0]*1].buttons.splice( idxs[1]*1, 0, config );\n\t\t}\n\t\telse {\n\t\t\tthis.c.buttons.splice( idx*1, 0, config );\n\t\t}\n\n\t\tthis.dom.container.empty();\n\t\tthis._buildButtons( this.c.buttons );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {int|string} Button index\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( idx ) {\n\t\tvar button = this._indexToButton( idx );\n\t\tbutton.node.addClass( this.c.dom.button.disabled );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed\n\t\tvar buttons = this.s.buttons;\n\t\tvar subButtons = this.s.subButtons;\n\t\tvar i, ien, j, jen;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.removePrep( i );\n\n\t\t\tfor ( j=0, jen=subButtons[i].length ; j<jen ; j++ ) {\n\t\t\t\tthis.removePrep( i+'-'+j );\n\t\t\t}\n\t\t}\n\n\t\tthis.removeCommit();\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {int|string} Button index\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( idx, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( idx );\n\t\t}\n\n\t\tvar button = this._indexToButton( idx );\n\t\tbutton.node.removeClass( this.c.dom.button.disabled );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node\n\t * @param  {int|string} Button index\n\t * @return {jQuery} Button element\n\t */\n\tnode: function ( idx )\n\t{\n\t\tvar button = this._indexToButton( idx );\n\t\treturn button.node;\n\t},\n\n\t/**\n\t * Tidy up any buttons that have been scheduled for removal. This is\n\t * required so multiple buttons can be removed without upsetting the button\n\t * indexes while removing them.\n\t * @param  {int|string} Button index\n\t * @return {Buttons} Self for chaining\n\t */\n\tremoveCommit: function ()\n\t{\n\t\tvar buttons = this.s.buttons;\n\t\tvar subButtons = this.s.subButtons;\n\t\tvar i, ien, j;\n\n\t\tfor ( i=buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( buttons[i] === null ) {\n\t\t\t\tbuttons.splice( i, 1 );\n\t\t\t\tsubButtons.splice( i, 1 );\n\t\t\t\tthis.c.buttons.splice( i, 1 );\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=subButtons.length ; i<ien ; i++ ) {\n\t\t\tfor ( j=subButtons[i].length-1 ; j>=0 ; j-- ) {\n\t\t\t\tif ( subButtons[i][j] === null ) {\n\t\t\t\t\tsubButtons[i].splice( j, 1 );\n\t\t\t\t\tthis.c.buttons[i].buttons.splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Scheduled a button for removal. This is required so multiple buttons can\n\t * be removed without upsetting the button indexes while removing them.\n\t * @return {Buttons} Self for chaining\n\t */\n\tremovePrep: function ( idx )\n\t{\n\t\tvar button;\n\t\tvar dt = this.s.dt;\n\n\t\tif ( typeof idx === 'number' || idx.indexOf('-') === -1 ) {\n\t\t\t// Top level button\n\t\t\tbutton = this.s.buttons[ idx*1 ];\n\n\t\t\tif ( button.conf.destroy ) {\n\t\t\t\tbutton.conf.destroy.call( dt.button(idx), dt, button, button.conf );\n\t\t\t}\n\n\t\t\tbutton.node.remove();\n\t\t\tthis._removeKey( button.conf );\n\t\t\tthis.s.buttons[ idx*1 ] = null;\n\t\t}\n\t\telse {\n\t\t\t// Collection button\n\t\t\tvar idxs = idx.split('-');\n\t\t\tbutton = this.s.subButtons[ idxs[0]*1 ][ idxs[1]*1 ];\n\n\t\t\tif ( button.conf.destroy ) {\n\t\t\t\tbutton.conf.destroy.call( dt.button(idx), dt, button, button.conf );\n\t\t\t}\n\n\t\t\tbutton.node.remove();\n\t\t\tthis._removeKey( button.conf );\n\t\t\tthis.s.subButtons[ idxs[0]*1 ][ idxs[1]*1 ] = null;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} Button index\n\t * @param  {string} Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( idx, label )\n\t{\n\t\tvar button = this._indexToButton( idx );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = typeof idx === 'string' && idx.indexOf( '-' ) !== -1 && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button.node, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tbutton.node.children( linerTag ).html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tbutton.node.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Calculate button index from a node\n\t * @param  {node} Button node (_not_ a jQuery object)\n\t * @return {string} Index. Undefined if not found\n\t */\n\ttoIndex: function ( node )\n\t{\n\t\tvar i, ien, j, jen;\n\t\tvar buttons = this.s.buttons;\n\t\tvar subButtons = this.s.subButtons;\n\n\t\t// Loop the main buttons first\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node[0] === node ) {\n\t\t\t\treturn i+'';\n\t\t\t}\n\t\t}\n\n\t\t// Then the sub-buttons\n\t\tfor ( i=0, ien=subButtons.length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=subButtons[i].length ; j<jen ; j++ ) {\n\t\t\t\tif ( subButtons[i][j].node[0] === node ) {\n\t\t\t\t\treturn i+'-'+j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tthis._buildButtons( this.c.buttons );\n\n\t\tdt.on( 'destroy', function () {\n\t\t\tthat.destroy();\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} Buttons to create\n\t * @param  {jQuery} Container node into which the created button should be\n\t *   inserted.\n\t * @param  {int} Counter for sub-buttons to be stored in a collection\n\t * @private\n\t */\n\t_buildButtons: function ( buttons, container, collectionCounter )\n\t{\n\t\tvar dt = this.s.dt;\n\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tthis.s.buttons = [];\n\t\t\tthis.s.subButtons = [];\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( $.isArray( conf ) ) {\n\t\t\t\tthis._buildButtons( conf, container, collectionCounter );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar button = this._buildButton(\n\t\t\t\tconf,\n\t\t\t\tcollectionCounter!==undefined ? true : false\n\t\t\t);\n\n\t\t\tif ( ! button ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar buttonNode = button.node;\n\t\t\tcontainer.append( button.inserter );\n\n\t\t\tif ( collectionCounter === undefined ) {\n\t\t\t\tthis.s.buttons.push( {\n\t\t\t\t\tnode:     buttonNode,\n\t\t\t\t\tconf:     conf,\n\t\t\t\t\tinserter: button.inserter\n\t\t\t\t} );\n\t\t\t\tthis.s.subButtons.push( [] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.s.subButtons[ collectionCounter ].push( {\n\t\t\t\t\tnode:     buttonNode,\n\t\t\t\t\tconf:     conf,\n\t\t\t\t\tinserter: button.inserter\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( conf.buttons ) {\n\t\t\t\tvar collectionDom = this.c.dom.collection;\n\t\t\t\tconf._collection = $('<'+collectionDom.tag+'/>')\n\t\t\t\t\t.addClass( collectionDom.className );\n\n\t\t\t\tthis._buildButtons( conf.buttons, conf._collection, i );\n\t\t\t}\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// have been added to the buttons / subButtons array first\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( buttonNode ), dt, buttonNode, conf );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} collectionButton `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, collectionButton )\n\t{\n\t\tvar that = this;\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( collectionButton && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t}\n\n\t\tif ( collectionButton && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, Flash buttons require Flash\n\t\tif ( config.available && ! config.available( dt, config ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar button = $('<'+buttonDom.tag+'/>')\n\t\t\t.addClass( buttonDom.className )\n\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\t\t\t\t}\n\n\t\t\t\tbutton.blur();\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\tif ( linerDom.tag ) {\n\t\t\tbutton.append(\n\t\t\t\t$('<'+linerDom.tag+'/>')\n\t\t\t\t\t.html( text( config.text ) )\n\t\t\t\t\t.addClass( linerDom.className )\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tbutton.html( text( config.text ) );\n\t\t}\n\n\t\tif ( config.enabled === false ) {\n\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t}\n\n\t\tif ( config.className ) {\n\t\t\tbutton.addClass( config.className );\n\t\t}\n\n\t\tif ( config.titleAttr ) {\n\t\t\tbutton.attr( 'title', config.titleAttr );\n\t\t}\n\n\t\tif ( ! config.namespace ) {\n\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\treturn {\n\t\t\tnode: button,\n\t\t\tinserter: inserter\n\t\t};\n\t},\n\n\t/**\n\t * Get a button's host information from a button index\n\t * @param  {int|string} Button index\n\t * @return {object} Button information - object contains `node` and `conf`\n\t *   properties\n\t * @private\n\t */\n\t_indexToButton: function ( idx )\n\t{\n\t\tif ( typeof idx === 'number' || idx.indexOf('-') === -1 ) {\n\t\t\treturn this.s.buttons[ idx*1 ];\n\t\t}\n\n\t\tvar idxs = idx.split('-');\n\t\treturn this.s.subButtons[ idxs[0]*1 ][ idxs[1]*1 ];\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} The character pressed\n\t * @param  {object} Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\tvar i, ien, j, jen;\n\t\tvar buttons = this.s.buttons;\n\t\tvar subButtons = this.s.subButtons;\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\tnode.click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\tnode.click();\n\t\t\t}\n\t\t};\n\n\t\t// Loop the main buttons first\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\trun( buttons[i].conf, buttons[i].node );\n\t\t}\n\n\t\t// Then the sub-buttons\n\t\tfor ( i=0, ien=subButtons.length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=subButtons[i].length ; j<jen ; j++ ) {\n\t\t\t\trun( subButtons[i][j].conf, subButtons[i][j].node );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} Button configuration\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} Button config to resolve\n\t * @return {object} Button configuration\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! $.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base( dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\tthrow 'Unknown button type: '+base;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( $.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t\t// if buttons should be added to the start or end of a collection\n\t\t\tvar postfixButtons = conf.postfixButtons;\n\t\t\tif ( postfixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.postfixButtons = null;\n\t\t\t}\n\n\t\t\tvar prefixButtons = conf.prefixButtons;\n\t\t\tif ( prefixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.prefixButtons = null;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\treturn conf;\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\n\tif ( show ) {\n\t\t$('<div/>')\n\t\t\t.addClass( className )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t\t\t.fadeIn( fade );\n\t}\n\telse {\n\t\t$('body > div.'+className)\n\t\t\t.fadeOut( fade, function () {\n\t\t\t\t$(this).remove();\n\t\t\t} );\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( ! group ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( $.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( $.trim(input), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien, j, jen;\n\t\tvar buttons = [];\n\n\t\t$.each( inst.s.buttons, function (i, v) {\n\t\t\tif ( v !== null ) {\n\t\t\t\tbuttons.push( {\n\t\t\t\t\tnode: v.node[0],\n\t\t\t\t\tname: v.conf.name\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t$.each( inst.s.subButtons, function (i, v) {\n\t\t\t$.each( v, function (j, w) {\n\t\t\t\tif ( w !== null ) {\n\t\t\t\t\tbuttons.push( {\n\t\t\t\t\t\tnode: w.node[0],\n\t\t\t\t\t\tname: w.conf.name\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( $.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tidx: inst.toIndex( buttons[i].node )\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tret.push( {\n\t\t\t\tinst: inst,\n\t\t\t\tidx: selector\n\t\t\t} );\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( $.trim(a[i]), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)?$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tidx: selector\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tidx: inst.toIndex( buttons[i].node )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tidx: inst.toIndex( this )\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tidx: inst.toIndex( nodes[ idx ] )\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-button-collection'\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'a',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled'\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '1.1.1-dev';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt, button, config ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\taction: function ( e, dt, button, config ) {\n\t\t\tvar background;\n\t\t\tvar host = button;\n\t\t\tvar hostOffset = host.offset();\n\t\t\tvar tableContainer = $( dt.table().container() );\n\t\t\tvar multiLevel = false;\n\n\t\t\t// Remove any old collection\n\t\t\tif ( $('div.dt-button-background').length ) {\n\t\t\t\tmultiLevel = $('div.dt-button-collection').offset();\n\t\t\t\t$(document).trigger( 'click.dtb-collection' );\n\t\t\t}\n\n\t\t\tconfig._collection\n\t\t\t\t.addClass( config.collectionLayout )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.appendTo( 'body' )\n\t\t\t\t.fadeIn( config.fade );\n\n\t\t\tvar position = config._collection.css( 'position' );\n\n\t\t\tif ( multiLevel && position === 'absolute' ) {\n\t\t\t\tconfig._collection.css( {\n\t\t\t\t\ttop: multiLevel.top + 5, // magic numbers for a little offset\n\t\t\t\t\tleft: multiLevel.left + 5\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( position === 'absolute' ) {\n\t\t\t\tconfig._collection.css( {\n\t\t\t\t\ttop: hostOffset.top + host.outerHeight(),\n\t\t\t\t\tleft: hostOffset.left\n\t\t\t\t} );\n\n\t\t\t\tvar listRight = hostOffset.left + config._collection.outerWidth();\n\t\t\t\tvar tableRight = tableContainer.offset().left + tableContainer.width();\n\t\t\t\tif ( listRight > tableRight ) {\n\t\t\t\t\tconfig._collection.css( 'left', hostOffset.left - ( listRight - tableRight ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fix position - centre on screen\n\t\t\t\tvar top = config._collection.height() / 2;\n\t\t\t\tif ( top > $(window).height() / 2 ) {\n\t\t\t\t\ttop = $(window).height() / 2;\n\t\t\t\t}\n\n\t\t\t\tconfig._collection.css( 'marginTop', top*-1 );\n\t\t\t}\n\n\t\t\tif ( config.background ) {\n\t\t\t\tButtons.background( true, config.backgroundClassName, config.fade );\n\t\t\t}\n\n\t\t\t// Need to break the 'thread' for the collection button being\n\t\t\t// activated by a click - it would also trigger this event\n\t\t\tsetTimeout( function () {\n\t\t\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t\t\t// background element, iOS Safari will ignore the body click\n\t\t\t\t// listener below. An empty function here is all that is\n\t\t\t\t// required to make it work...\n\t\t\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\t\t\t$('body').on( 'click.dtb-collection', function (e) {\n\t\t\t\t\tif ( ! $(e.target).parents().andSelf().filter( config._collection ).length ) {\n\t\t\t\t\t\tconfig._collection\n\t\t\t\t\t\t\t.fadeOut( config.fade, function () {\n\t\t\t\t\t\t\t\tconfig._collection.detach();\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\t\t\t\tButtons.background( false, config.backgroundClassName, config.fade );\n\n\t\t\t\t\t\t$('body').off( 'click.dtb-collection' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}, 10 );\n\t\t},\n\t\tbackground: true,\n\t\tcollectionLayout: '',\n\t\tbackgroundClassName: 'dt-button-background',\n\t\tfade: 400\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t\tif ( _dtButtons.copyFlash && _dtButtons.copyFlash.available( dt, conf ) ) {\n\t\t\treturn 'copyFlash';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t\tif ( _dtButtons.csvFlash && _dtButtons.csvFlash.available( dt, conf ) ) {\n\t\t\treturn 'csvFlash';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t\tif ( _dtButtons.excelFlash && _dtButtons.excelFlash.available( dt, conf ) ) {\n\t\t\treturn 'excelFlash';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t\tif ( _dtButtons.pdfFlash && _dtButtons.pdfFlash.available( dt, conf ) ) {\n\t\t\treturn 'pdfFlash';\n\t\t}\n\t},\n\tpageLength: function ( dt, conf ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = $.isArray( lengthMenu[0] ) ? lengthMenu[0] : lengthMenu;\n\t\tvar lang = $.isArray( lengthMenu[0] ) ? lengthMenu[1] : lengthMenu;\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\taction: function ( e, dt, button, conf ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t\t$('div.dt-button-background').click();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( text( dt ) );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\treturn this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.register( ['buttons().active()', 'button().active()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.idx, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\t return set.inst.action( set.idx );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.idx, action );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.idx, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.idx );\n\t} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.idx ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\t return set.inst.text( set.idx );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.idx, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.idx ).trigger( 'click' );\n\t} );\n} );\n\n// Get the container elements for the button sets selected\nDataTable.Api.registerPlural( 'buttons().containers()', 'buttons().container()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.container() );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n\tif ( this.length === 1 ) {\n\t\tthis[0].inst.add( idx, conf );\n\t}\n\n\treturn this.button( idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function ( idx ) {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\t// Need to split into prep and commit so the indexes remain constant during the remove\n\tthis.each( function ( set ) {\n\t\tset.inst.removePrep( set.idx );\n\t} );\n\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.removeCommit();\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\t$('#datatables_buttons_info').fadeOut( function () {\n\t\t\t$(this).remove();\n\t\t} );\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t.html( title )\n\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t.css( 'display', 'none' )\n\t\t.appendTo( 'body' )\n\t\t.fadeIn();\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t}\n\t\t}\n\t}, inOpts );\n\n\tvar strip = function ( str ) {\n\t\tif ( typeof str !== 'string' ) {\n\t\t\treturn str;\n\t\t}\n\n\t\tif ( config.stripHtml ) {\n\t\t\tstr = str.replace( /<.*?>/g, '' );\n\t\t}\n\n\t\tif ( config.trim ) {\n\t\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t\t}\n\n\t\tif ( config.stripNewlines ) {\n\t\t\tstr = str.replace( /\\n/g, ' ' );\n\t\t}\n\n\t\tif ( config.decodeEntities ) {\n\t\t\t_exportTextarea.innerHTML = str;\n\t\t\tstr = _exportTextarea.value;\n\t\t}\n\n\t\treturn str;\n\t};\n\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx, i) {\n\t\treturn config.format.header( dt.column( idx ).header().innerHTML, idx );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx, i) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx );\n\t\t} ).toArray() :\n\t\tnull;\n\n\tvar rowIndexes = dt.rows( config.rows, config.modifier ).indexes().toArray();\n\tvar cells = dt\n\t\t.cells( rowIndexes, config.columns )\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = new Array( rows );\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = new Array( columns );\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], j, i );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\treturn {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: function( settings ) {\n\t\tvar api = new DataTable.Api( settings );\n\t\tvar opts = api.init().buttons || DataTable.defaults.buttons;\n\n\t\treturn new Buttons( api, opts ).container();\n\t},\n\tcFeature: \"B\"\n} );\n\n\nreturn Buttons;\n}));\n"],"sourceRoot":""}